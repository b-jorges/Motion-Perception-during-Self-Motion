family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03", "s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1no motion", "congruent", "incongruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr)
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
a = a %>%
mutate(
Pest_Bigger = case_when(
Response_Interval == Pest_Interval ~ 1,
Response_Interval != Pest_Interval ~ 0,
),
Direction = case_when(
velH < 0 ~ "left",
velH > 0 ~ "right",
),
Difference = abs(velH_Pest)-abs(velH),
velH_Absolut = abs(velH),
Congruent = case_when(
velH*velH_Subject < 0 ~ "1incongruent",
velH*velH_Subject > 0 ~ "3congruent",
velH*velH_Subject == 0 ~ "2no motion"
),
Difference_Percent = Difference/velH
) %>%
filter(abs(velH_Pest) < abs(velH)*1.5)
###Pull the whole repository and paste the path to the the local GitHub repository here:
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
require(lemon)
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
b <- read.table(header=T,"PilotData/Discarded/Pilots02_2D.txt")
c <- read.table(header=T,"PilotData/Discarded/Pilots01_2D.txt")
d <- read.table(header=T,"PilotData/Pilots01_3D.txt")
e <- read.table(header=T,"PilotData/pilots03.txt")
f <- read.table(header=T,"PilotData/Pilots02_3D.txt")
g <- read.table(header=T,"PilotData/Discarded/Pilots07.txt")
h <- read.table(header=T,"PilotData/pilots04.txt")
i <- read.table(header=T,"PilotData/Pilots06.txt")
j <- read.table(header=T,"PilotData/Pilots05.txt")
b$id = "s02_2D"
c$id = "s01_2D"
d$id = "s01_3D"
e$id = "s03"
b$Start_Above = 1
c$Start_Above = 1
f$id = "s02_3D"
g$id = "s07"
h$id = "s04"
i$id = "s05"
j$id = "s06"
a = rbind(b,c,d,e,f,g,h,i,j)
a = a %>%
mutate(
Pest_Bigger = case_when(
Response_Interval == Pest_Interval ~ 1,
Response_Interval != Pest_Interval ~ 0,
),
Direction = case_when(
velH < 0 ~ "left",
velH > 0 ~ "right",
),
Difference = abs(velH_Pest)-abs(velH),
velH_Absolut = abs(velH),
Congruent = case_when(
velH*velH_Subject < 0 ~ "1incongruent",
velH*velH_Subject > 0 ~ "3congruent",
velH*velH_Subject == 0 ~ "2no motion"
),
Difference_Percent = Difference/velH
) %>%
filter(abs(velH_Pest) < abs(velH)*1.5)
a = a %>%
group_by(id,Congruent,velH,Difference) %>%
mutate(Yes = sum(Pest_Bigger==1),
Total = length(velH_Subject))
Data_GLM =
select(a,c(id,Congruent,velH,Difference,Yes,Total,velH_Subject)) %>%
distinct()
Data_GLM = Data_GLM %>%
mutate(
Static = case_when(
velH_Subject == 0 ~ 1,
velH_Subject != 0 ~ 0
)
)
###############Psychometric Functions
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Difference | id) + (Difference | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03", "s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1no motion", "congruent", "incongruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1incongruent", "2nomotion", "3congruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1incongruent", "2no motion", "3congruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("Incongruent","No Motion", "Congruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
###############Psychometric Functions
mod4 = glmer(cbind(Yes, Total - Yes) ~ (Difference*Congruent | id) + (Difference*Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03", "s06"),])
###############Psychometric Functions
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Difference | id) + (Difference | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03", "s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 3, by = 0.5),
Congruent = c("1incongruent", "2no motion", "3congruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("Incongruent","No Motion", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
###############Psychometric Functions
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH) + (Congruent | id),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s06"),])
###############Psychometric Functions
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1no motion", "congruent", "incongruent"),
id = c("s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("1no motion", "congruent", "incongruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s03", "s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s03"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
plot2 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
plot_grid(plot1,plot2, nrow = 1)
plot1 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot1 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s03"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot2 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "top")
plot_grid(plot1,plot2, nrow = 1)
plot_grid(plot1,plot2, nrow = 2)
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot1 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("") +
ylab("Response Probability") +
theme(legend.position = "")
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s03"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot2 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "")
plot3 = plot_grid(plot1,plot2, nrow = 2)
plot_grid(plot3,legend,rel_widths = c(1,0.2))
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s06"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s06"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot1 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "")
mod4 = glmer(cbind(Yes, Total - Yes) ~ Congruent*Difference + (Congruent | velH),
family = binomial(link = "probit"),
data = Data_GLM[Data_GLM$id %in% c("s03"),])
newdfr2 = expand.grid(Difference = seq(from = -6, to = 2, by = 0.5),
Congruent = c("2no motion", "3congruent", "1incongruent"),
id = c("s03"),
velH = c(-8,-6.6,6.6,8))
newdfr2$response = predict(mod4,type = "response", newdata = newdfr2)
plot2 = ggplot(newdfr2,aes(x=Difference, y=response, col = Congruent)) +
geom_line(size=1) +
facet_grid(id~velH) +
geom_hline(yintercept = 0.5, color = "grey") +
geom_vline(xintercept = 0, color = "grey") +
scale_color_manual(name = "",
values = c(BlauUB,Yellow,Red),
labels = c("No Motion","Congruent", "Incongruent")) +
xlab("Difference (m/s)") +
ylab("Response Probability") +
theme(legend.position = "")
plot3 = plot_grid(plot1,plot2, nrow = 2)
plot_grid(plot3,legend,rel_widths = c(1,0.2))
ggsave("PsychometricFunctions.jpg", w=8, h=6)
X = pnorm(0,1,1)
X
StimulusStrength = seq(-3,3,0.01)
StimulusStrength
StimulusStrength = seq(-3,3,0.01)
Regular = pnorm(StimulusStrength,0,1)
Bias = pnorm(StimulusStrength,1,1)
Sensitivity = pnorm(StimulusStrength,0,2)
Regular
PsychometricFunctions = data.frame(Value = c(Regular, Bias, Sensitivity),
StimulusStrength = rep(StimulusStrength,3),
Which = rep("Base",length(StimulusStrength)),
rep("Bias",length(StimulusStrength)),
rep("Sensitivity Change",length(StimulusStrength)))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line()
StimulusStrength = seq(-3,3,0.01)
Regular = pnorm(StimulusStrength,0,1)
Bias = pnorm(StimulusStrength,1,1)
Sensitivity = pnorm(StimulusStrength,0,2)
PsychometricFunctions = data.frame(Value = c(Regular, Bias, Sensitivity),
StimulusStrength = rep(StimulusStrength,3),
Which = rep("Base",length(StimulusStrength)),
rep("Bias",length(StimulusStrength)),
rep("Sensitivity Change",length(StimulusStrength)))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line()
PsychometricFunctions = data.frame(Value = c(Regular, Bias, Sensitivity),
StimulusStrength = rep(StimulusStrength,3),
Which = c(rep("Base",length(StimulusStrength)),
rep("Bias",length(StimulusStrength)),
rep("Sensitivity Change",length(StimulusStrength))))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line()
StimulusStrength = seq(-4,4,0.01)
Regular = pnorm(StimulusStrength,0,1)
Bias = pnorm(StimulusStrength,1,1)
Sensitivity = pnorm(StimulusStrength,0,2)
PsychometricFunctions = data.frame(Value = c(Regular, Bias, Sensitivity),
StimulusStrength = rep(StimulusStrength,3),
Which = c(rep("Base",length(StimulusStrength)),
rep("Bias",length(StimulusStrength)),
rep("Sensitivity Change",length(StimulusStrength))))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line()
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2)
PsychometricFunctions = data.frame(Value = c(Regular, Bias, Sensitivity),
StimulusStrength = rep(StimulusStrength,3),
Which = c(rep("Base",length(StimulusStrength)),
rep("Bias",length(StimulusStrength)),
rep("Sensitivity Decrease",length(StimulusStrength))))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, Lila))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, BlauUB))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed))
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank())
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
xlab("Probability")
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability")
ggsave("PsychometricFunctionExample.jpg", w=8, h=3)
ggsave("PsychometricFunctionExample.jpg", w=3, h=8)
ggsave("PsychometricFunctionExample.jpg", w=5, h=8)
ggsave("PsychometricFunctionExample.jpg", w=8, h=4)
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability") +
scale_y_continuous(position = "right")
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability") +
scale_y_continuous(position = "right") +
theme(legend.position = "left")
ggsave("PsychometricFunctionExample.jpg", w=8, h=4)
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability") +
ylab("Difference in Stimulus Strength") +
scale_y_continuous(position = "right") +
theme(legend.position = "left")
ggsave("PsychometricFunctionExample.jpg", w=8, h=4)
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability") +
xlab("Difference in Stimulus Strength") +
scale_y_continuous(position = "right") +
theme(legend.position = "left")
ggsave("PsychometricFunctionExample.jpg", w=8, h=4)
ggplot(PsychometricFunctions,aes(StimulusStrength,Value,color = Which)) +
geom_line(size = 2) +
scale_color_manual(values = c("black", Turquoise, LightRed)) +
theme(legend.title = element_blank()) +
ylab("Probability") +
xlab("Stimulus Strength") +
scale_y_continuous(position = "right") +
theme(legend.position = "left")
ggsave("PsychometricFunctionExample.jpg", w=8, h=4)
