Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = Congruent)) +
geom_point(size=3)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = Congruent)) +
geom_point(size=3)
-(- ObserverMotion*4 + vx * 0.5)/2
vx*TimeSeries
TimeSeries
6.6*TimeSeries
-(- ObserverMotion*4 + vx * 0.5)/2 + vx*
Conversion
Conversion
TimeSeries
Conversion
vx
bserverMotion
ObserverMotion
Conversion
Conversion
-(- ObserverMotion*4 + vx * 0.5)/2
ObserverMotion
View(Conversion)
-(- ObserverMotion*4 + vx * 0.5)/2 + vx*
length(TimeSeries)
length(TimeSeries)
length(vx)
length(ObserverMotion)
length(ObserverMotion)*length(TimeSeries)*length(ObserverMotion)
Conversion
length(ObserverMotion)*length(TimeSeries)*length(ObserverMotion)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = Congruent)) +
geom_point(size=3)
-(0.25*4 + 6.6 * 0.5)/2 + 6.6*TimeSeries
ObserverMotion*vx
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(ObserverMotion))) +
geom_point(size=3)
plot(TimeSeries,-(- 0.25*4 + 6.6 * 0.5)/2 + 6.6*TimeSeries)
plot(TimeSeries,-(0.25*4 + 6.6 * 0.5)/2 + 6.6*TimeSeries)
plot(TimeSeries,-(- 0.25*4 - 6.6 * 0.5)/2 - 6.6*TimeSeries)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(ObserverMotion))) +
geom_point(size=3)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(ObserverMotion))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(ObserverMotion))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((TargetInSpace-ObserverInSpace)^2 - 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(ObserverMotion))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((TargetInSpace-ObserverInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(ObserverMotion))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 1 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -1 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -1 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 1 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/6)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggsave("lalala.jpg",w=5, h=6)
###Pull the whole repository. The code should work as long as the structure of the repository is not altered.
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
source("Utilities/parabolic.r")
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/6)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggsave("lalala.jpg",w=5, h=6)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/6)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
ggsave("lalala.jpg",w=5, h=6)
ggplot(Conversion, aes(TimeSeries,ObserverInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,TargetInSpace,col = as.factor(Congruent))) +
geom_point(size=3)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(abs(ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(abs(ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(abs(ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100) %>%
mutate(Congruent = case_when(
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(abs(ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(abs(ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan(ObserverInSpace-TargetInSpace)/8),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ -0.5 + pnorm(TimeSeries,abs(ObserverMotion),0.08)*2,
ObserverMotion == -0.25 ~ 0.5 -pnorm(TimeSeries,abs(ObserverMotion),0.08)*2),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Distance = ((ObserverInSpace-TargetInSpace)^2 + 8^2)^0.5,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs(Angle - lag(Angle, n = 1))/0.01) %>%
#  filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,Distance,col = as.factor(Congruent))) +
geom_point(size=3)
