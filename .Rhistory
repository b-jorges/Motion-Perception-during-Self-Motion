Space_Static
-6.6/0.25+6.6*TimeSeries
-6.6/0.25
-6.6/4+6.6*TimeSeries
Observer_Static = 0
Observer_Static
Space_Static
Space_Static = -6.6/4+6.6*TimeSeries
Space_Static
vx = c(6.6,8)
ObserverMotion = c("Static", "Conguent", "Incongruent")
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
pnorm(TimeSeries,0.25,0.08)
-pnorm(TimeSeries,0.25,0.08)
-vx/4 + vx*TimeSeries
vx
-vx[1]/4 + vx[1]*TimeSeries
pnorm(TimeSeries,0.25,0.08)
-vx/4
conversion = conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion = "Static" ~ 0,
ObserverMotion = "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion = "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion = "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
###Pull the whole repository. The code should work as long as the structure of the repository is not altered.
require(dplyr)
require(lme4)
require(ggplot2)
require(quickpsy)
conversion = conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion = "Static" ~ 0,
ObserverMotion = "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion = "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion = "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion = "Static" ~ 0,
ObserverMotion = "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion = "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion = "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(6.6,8)
ObserverMotion = c("Static", "Congruent", "Incongruent")
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
Conversion
colnames(Conversion) = c("vx", "ObserverMotion", "Conversion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
Conversion
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
pnorm(TimeSeries,0.25,0.08)
vx*TimeSeries
vx/4
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
Conversion
TimeSeries = seq(0,0.5,0.01)
vx = c(6.6,8)
ObserverMotion = c("Static", "Congruent", "Incongruent")
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Congruent" ~ - 0.25*4 + vx * 0.5)
)
Conversion
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Static" ~ - 0.25*4 + vx * 0.5)
)
Conversion
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Static" ~ - 0.25*4 + vx * 0.5 + vx*TimeSeries)
)
Conversion
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == "Static" ~ 0,
ObserverMotion == "Congruent" ~ pnorm(TimeSeries,0.25,0.08),
ObserverMotion == "Incongruent" ~ -pnorm(TimeSeries,0.25,0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Static" ~ (- 0.25*4 + vx * 0.5)/2 + vx*TimeSeries))
Conversion
(- 0.25*4 + vx * 0.5)/2
vx * 0.5
(0.25*4 + vx * 0.5)/2
(- 0.25*4 + vx * 0.5)/2
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Static" ~ -(- 0.25*4 + vx * 0.5)/2 + vx*TimeSeries)
)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = case_when(
ObserverMotion == "Static" ~ -vx/4 + vx*TimeSeries,
ObserverMotion != "Static" ~ -(- 0.25*4 + vx * 0.5)/2 + vx*TimeSeries)
)
Conversion
View(Conversion)
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries)
Conversion
Conversion
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = atan((ObserverInSpace-TargetInSpace)/8))
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = atan((ObserverInSpace-TargetInSpace)/8),
AngleVelocity = Angle - lag(Angle, n = 1))
AngleVelocity
Conversion$AngleVelocity
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = Angle - lag(Angle, n = 1))
Conversion$AngleVelocity
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01)
Conversion$AngleVelocity
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.1)
Conversion$AngleVelocity
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.0000001)
Conversion$AngleVelocity
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.0000001)
require("parabolic.r")
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
binomial_smooth <- function(...) {
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)}
setwd(Where_Am_I())
require("parabolic.r")
require("Utilities/parabolic.r")
Where_Am_I <- function(path=T){
if (path == T){
dirname(rstudioapi::getSourceEditorContext()$path)
}
else {
rstudioapi::getSourceEditorContext()$path
}
}
require("Utilities/parabolic.r")
source("Utilities/parabolic.r")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01)
Conversion$AngleVelocity
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100)
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100)
TimeSeries = seq(0,0.5,0.01)
vx = c(6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = (Angle - lag(Angle, n = 1))/0.01) %>%
filter(AngleVelocity < 100)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01))
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = as.factor(ObserverMotion))) +
geom_point()
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500) %>%
Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent"
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500) %>%
Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent"
)
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500) %>%
mutate(Congruent = case_when(
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
#######################transform physical speeds into observer centric speeds (= radial velocity)
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 500 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
TimeSeries = seq(0,0.5,0.01)
vx = c(-8,-6.6,6.6,8)
ObserverMotion = c(-0.25,0,0.25)
Conversion = expand.grid(TimeSeries,vx,ObserverMotion)
colnames(Conversion) = c("TimeSeries", "vx", "ObserverMotion")
Conversion = Conversion %>%
mutate(ObserverInSpace = case_when(
ObserverMotion == 0 ~ 0,
ObserverMotion == 0.25 ~ pnorm(TimeSeries,abs(ObserverMotion),0.08),
ObserverMotion == -0.25 ~ -pnorm(TimeSeries,abs(ObserverMotion),0.08)),
TargetInSpace = -(- ObserverMotion*4 + vx * 0.5)/2 + vx*TimeSeries,
Angle = RadiansToDegree(atan((ObserverInSpace-TargetInSpace)/8)),
AngleVelocity = abs((Angle - lag(Angle, n = 1))/0.01)) %>%
filter(AngleVelocity < 100 & AngleVelocity > 0 ) %>%
mutate(Congruent = case_when(
ObserverMotion*vx == 0 ~ "Static",
ObserverMotion*vx < 0 ~ "Incongruent",
ObserverMotion*vx > 0 ~ "Congruent")
)
ggplot(Conversion, aes(TimeSeries,AngleVelocity,col = Congruent)) +
geom_point()
